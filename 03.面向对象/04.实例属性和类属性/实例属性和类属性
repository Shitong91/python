1. 任意绑定属性

由于Python是动态语言，根据类创建的实例可以任意绑定属性
这一点和C++不太一样。这个意思是说，在创建类的对象以后，
仍然可以通过对象来给这个类对象添加属性(成员变量)，但是这个
添加的属性仅限于当前所在的对象，并没有对类添加这样的属性。

例子见anyattr.py 

2. 类的属性

直接在class中定义的属性是类属性，类的所有实例都可以访问.
如果已经有类的属性，我们又对实例绑定同样名字的属性，这时，
如果再通过实例访问这个同名属性时，得到的结果是实例那个属性，
而不是类那个属性，因为在实例在访问的优先级是，先访问实例对应
的属性，如果实例没有这个属性，则再访问类属性。

2. 类的属性

直接在class中定义的属性是类属性，类的所有实例都可以访问.
如果已经有类的属性，我们又对实例绑定同样名字的属性，这时，
如果再通过实例访问这个同名属性时，得到的结果是实例那个属性，
而不是类那个属性，因为在实例在访问的优先级是，先访问实例对应
的属性，如果实例没有这个属性，则再访问类属性。


